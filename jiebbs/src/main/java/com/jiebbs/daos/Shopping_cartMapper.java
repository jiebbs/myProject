package com.jiebbs.daos;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.jiebbs.pojos.Shopping_cart;

public interface Shopping_cartMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shopping_cart_table
	 * @mbg.generated  Sat Jul 21 15:36:47 CST 2018
	 */
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shopping_cart_table
	 * @mbg.generated  Sat Jul 21 15:36:47 CST 2018
	 */
	int insert(Shopping_cart record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shopping_cart_table
	 * @mbg.generated  Sat Jul 21 15:36:47 CST 2018
	 */
	int insertSelective(Shopping_cart record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shopping_cart_table
	 * @mbg.generated  Sat Jul 21 15:36:47 CST 2018
	 */
	Shopping_cart selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shopping_cart_table
	 * @mbg.generated  Sat Jul 21 15:36:47 CST 2018
	 */
	int updateByPrimaryKeySelective(Shopping_cart record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table shopping_cart_table
	 * @mbg.generated  Sat Jul 21 15:36:47 CST 2018
	 */
	int updateByPrimaryKey(Shopping_cart record);
	
	/**
	 * 根据用户id和产品id查询用户购物车
	 * @param userId
	 * @param productId
	 * @return
	 */
	Shopping_cart selectByUserIdAndProductId(@Param(value="userId")Integer userId,@Param(value="productId")Integer productId);
	
	/**
	 * 通过userId 来查询购物车信息
	 * @param userId
	 * @return
	 */
	List<Shopping_cart> selectCartByUserId(Integer userId);
	
	/**
	 * 通过userId查找商品是否别勾选
	 * @param userId
	 * @return
	 */
	int selectProductCheckedStatusByUserId(Integer userId);
	
	/**
	 * 根据userId和传入的商品Id删除商品
	 * @param userId
	 * @param productIds
	 * @return
	 */
	int delectByUserIdAndProductIds(@Param("userId")Integer userId,@Param("productIds")List<String> productIds);
	
	/**
	 * 根据传入的userId,返回全选或者全反选的商品列表
	 * @param userId
	 * @return
	 */
	int checkOrUncheckProduct(@Param("userId")Integer userId,@Param("productId")Integer productId,@Param("checked")Integer checked);
	
	/**
	 * 根据传入的userId 查询用户购物车里的商品数量
	 * @param userId
	 * @return
	 */
	int selectCartProductCount(Integer userId);
}